"use strict";(self.webpackChunksd_webui_3d_editor=self.webpackChunksd_webui_3d_editor||[]).push([[546],{4546:function(t,e,r){r.r(e),r.d(e,{VTKLoader:function(){return a}});var n=r(9477),s=r(8646);class a extends n.aNw{constructor(t){super(t)}load(t,e,r,s){const a=this,o=new n.hH6(a.manager);o.setPath(a.path),o.setResponseType("arraybuffer"),o.setRequestHeader(a.requestHeader),o.setWithCredentials(a.withCredentials),o.load(t,(function(r){try{e(a.parse(r))}catch(e){s?s(e):console.error(e),a.manager.itemError(t)}}),r,s)}parse(t){function e(t,e){const r=t.length,n=new Float32Array(r+e.length);return n.set(t),n.set(e,r),n}function r(t,e){const r=t.length,n=new Int32Array(r+e.length);return n.set(t),n.set(e,r),n}const a=new TextDecoder,o=a.decode(new Uint8Array(t,0,250)).split("\n");return-1!==o[0].indexOf("xml")?function(t){function a(t){const e="undefined"!=typeof Uint8Array?Uint8Array:Array,r=[];for(let t=0,e=64;t<e;++t)r["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charCodeAt(t)]=t;r["-".charCodeAt(0)]=62,r["_".charCodeAt(0)]=63;const n=t.length;if(n%4>0)throw new Error("Invalid string. Length must be a multiple of 4");const s="="===t[n-2]?2:"="===t[n-1]?1:0,a=new e(3*n/4-s),o=s>0?n-4:n;let l,i,c=0;for(l=0,i=0;l<o;l+=4,i+=3){const e=r[t.charCodeAt(l)]<<18|r[t.charCodeAt(l+1)]<<12|r[t.charCodeAt(l+2)]<<6|r[t.charCodeAt(l+3)];a[c++]=(16711680&e)>>16,a[c++]=(65280&e)>>8,a[c++]=255&e}if(2===s){const e=r[t.charCodeAt(l)]<<2|r[t.charCodeAt(l+1)]>>4;a[c++]=255&e}else if(1===s){const e=r[t.charCodeAt(l)]<<10|r[t.charCodeAt(l+1)]<<4|r[t.charCodeAt(l+2)]>>2;a[c++]=e>>8&255,a[c++]=255&e}return a}function o(t,n){let o,i,c=0;if("UInt64"===l.attributes.header_type?c=8:"UInt32"===l.attributes.header_type&&(c=4),"binary"===t.attributes.format&&n){"Float32"===t.attributes.type?o=new Float32Array:"Int32"!==t.attributes.type&&"Int64"!==t.attributes.type||(o=new Int32Array);const n=t["#text"],l=a(Array.isArray(n)?n[0]:n),u=8;let f=l[0];for(let t=1;t<c-1;t++)f|=l[t]<<t*u;let p=(f+3)*c;p+=p%3>0?3-p%3:0;const A=[];let d=p;A.push(d);const h=3*c;for(let t=0;t<f;t++){let e=l[t*c+h];for(let r=1;r<c-1;r++)e|=l[t*c+h+r]<<r*u;d+=e,A.push(d)}for(let n=0;n<A.length-1;n++)i=s.HT(l.slice(A[n],A[n+1])).buffer,"Float32"===t.attributes.type?(i=new Float32Array(i),o=e(o,i)):"Int32"!==t.attributes.type&&"Int64"!==t.attributes.type||(i=new Int32Array(i),o=r(o,i));delete t["#text"],"Int64"===t.attributes.type&&"binary"===t.attributes.format&&(o=o.filter((function(t,e){if(e%2!=1)return!0})))}else"binary"!==t.attributes.format||n?i=t["#text"]?t["#text"].split(/\s+/).filter((function(t){if(""!==t)return t})):new Int32Array(0).buffer:(i=a(t["#text"]),i=i.slice(c).buffer),delete t["#text"],"Float32"===t.attributes.type?o=new Float32Array(i):"Int32"===t.attributes.type?o=new Int32Array(i):"Int64"===t.attributes.type&&(o=new Int32Array(i),"binary"===t.attributes.format&&(o=o.filter((function(t,e){if(e%2!=1)return!0}))));return o}const l=function t(e){let r={};if(1===e.nodeType){if(e.attributes&&e.attributes.length>0){r.attributes={};for(let t=0;t<e.attributes.length;t++){const n=e.attributes.item(t);r.attributes[n.nodeName]=n.nodeValue.trim()}}}else 3===e.nodeType&&(r=e.nodeValue.trim());if(e.hasChildNodes())for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes.item(n),a=s.nodeName;if(void 0===r[a]){const e=t(s);""!==e&&(r[a]=e)}else{if(void 0===r[a].push){const t=r[a];r[a]=[t]}const e=t(s);""!==e&&r[a].push(e)}}return r}((new DOMParser).parseFromString(t,"application/xml").documentElement);let i=[],c=[],u=[];if(l.PolyData){const t=l.PolyData.Piece,e=l.attributes.hasOwnProperty("compressor"),r=["PointData","Points","Strips","Polys"];let s=0;const a=r.length;for(;s<a;){const n=t[r[s]];if(n&&n.DataArray){let a;a=Array.isArray(n.DataArray)?n.DataArray:[n.DataArray];let l=0;const f=a.length;for(;l<f;)"#text"in a[l]&&a[l]["#text"].length>0&&(a[l].text=o(a[l],e)),l++;switch(r[s]){case"PointData":{const e=parseInt(t.attributes.NumberOfPoints),r=n.attributes.Normals;if(e>0)for(let t=0,n=a.length;t<n;t++)if(r===a[t].attributes.Name){const r=a[t].attributes.NumberOfComponents;c=new Float32Array(e*r),c.set(a[t].text,0)}}break;case"Points":{const e=parseInt(t.attributes.NumberOfPoints);if(e>0){const t=n.DataArray.attributes.NumberOfComponents;i=new Float32Array(e*t),i.set(n.DataArray.text,0)}}break;case"Strips":{const e=parseInt(t.attributes.NumberOfStrips);if(e>0){const t=new Int32Array(n.DataArray[0].text.length),r=new Int32Array(n.DataArray[1].text.length);t.set(n.DataArray[0].text,0),r.set(n.DataArray[1].text,0);const s=e+t.length;u=new Uint32Array(3*s-9*e);let a=0;for(let n=0,s=e;n<s;n++){const e=[];for(let s=0,a=r[n],o=0;s<a-o;s++)e.push(t[s]),n>0&&(o=r[n-1]);for(let t=0,s=r[n],o=0;t<s-o-2;t++)t%2?(u[a++]=e[t],u[a++]=e[t+2],u[a++]=e[t+1]):(u[a++]=e[t],u[a++]=e[t+1],u[a++]=e[t+2]),n>0&&(o=r[n-1])}}}break;case"Polys":{const e=parseInt(t.attributes.NumberOfPolys);if(e>0){const t=new Int32Array(n.DataArray[0].text.length),r=new Int32Array(n.DataArray[1].text.length);t.set(n.DataArray[0].text,0),r.set(n.DataArray[1].text,0);const s=e+t.length;u=new Uint32Array(3*s-9*e);let a=0,o=0,l=0,i=0;const c=e;for(;l<c;){const e=[];let n=0;const s=r[l];for(;n<s-i;)e.push(t[o++]),n++;let c=1;for(;c<s-i-1;)u[a++]=e[0],u[a++]=e[c],u[a++]=e[c+1],c++;l++,i=r[l-1]}}}}}s++}const f=new n.u9r;return f.setIndex(new n.TlE(u,1)),f.setAttribute("position",new n.TlE(i,3)),c.length===i.length&&f.setAttribute("normal",new n.TlE(c,3)),f}throw new Error("Unsupported DATASET type")}(a.decode(t)):o[2].includes("ASCII")?function(t){const e=[],r=[],s=[],a=[];let o;const l=/^[^\d.\s-]+/,i=/(\-?\d+\.?[\d\-\+e]*)\s+(\-?\d+\.?[\d\-\+e]*)\s+(\-?\d+\.?[\d\-\+e]*)/g,c=/^(\d+)\s+([\s\d]*)/,u=/^POINTS /,f=/^POLYGONS /,p=/^TRIANGLE_STRIPS /,A=/^POINT_DATA[ ]+(\d+)/,d=/^CELL_DATA[ ]+(\d+)/,h=/^COLOR_SCALARS[ ]+(\w+)[ ]+3/,y=/^NORMALS[ ]+(\w+)[ ]+(\w+)/;let b=!1,x=!1,w=!1,I=!1,g=!1,T=!1,m=!1;const D=new n.Ilk,O=t.split("\n");for(const t in O){const n=O[t].trim();if(0===n.indexOf("DATASET")){const t=n.split(" ")[1];if("POLYDATA"!==t)throw new Error("Unsupported DATASET type: "+t)}else if(b)for(;null!==(o=i.exec(n))&&null===l.exec(n);){const t=parseFloat(o[1]),e=parseFloat(o[2]),n=parseFloat(o[3]);r.push(t,e,n)}else if(x){if(null!==(o=c.exec(n))){const t=parseInt(o[1]),r=o[2].split(/\s+/);if(t>=3){const n=parseInt(r[0]);let s=1;for(let a=0;a<t-2;++a){const t=parseInt(r[s]),a=parseInt(r[s+1]);e.push(n,t,a),s++}}}}else if(w){if(null!==(o=c.exec(n))){const t=parseInt(o[1]),r=o[2].split(/\s+/);if(t>=3)for(let n=0;n<t-2;n++)if(n%2==1){const t=parseInt(r[n]),s=parseInt(r[n+2]),a=parseInt(r[n+1]);e.push(t,s,a)}else{const t=parseInt(r[n]),s=parseInt(r[n+1]),a=parseInt(r[n+2]);e.push(t,s,a)}}}else if(I||g)if(T)for(;null!==(o=i.exec(n))&&null===l.exec(n);){const t=parseFloat(o[1]),e=parseFloat(o[2]),r=parseFloat(o[3]);D.set(t,e,r).convertSRGBToLinear(),s.push(D.r,D.g,D.b)}else if(m)for(;null!==(o=i.exec(n))&&null===l.exec(n);){const t=parseFloat(o[1]),e=parseFloat(o[2]),r=parseFloat(o[3]);a.push(t,e,r)}null!==f.exec(n)?(x=!0,b=!1,w=!1):null!==u.exec(n)?(x=!1,b=!0,w=!1):null!==p.exec(n)?(x=!1,b=!1,w=!0):null!==A.exec(n)?(I=!0,b=!1,x=!1,w=!1):null!==d.exec(n)?(g=!0,b=!1,x=!1,w=!1):null!==h.exec(n)?(T=!0,m=!1,b=!1,x=!1,w=!1):null!==y.exec(n)&&(m=!0,T=!1,b=!1,x=!1,w=!1)}let F=new n.u9r;if(F.setIndex(e),F.setAttribute("position",new n.a$l(r,3)),a.length===r.length&&F.setAttribute("normal",new n.a$l(a,3)),s.length!==e.length)s.length===r.length&&F.setAttribute("color",new n.a$l(s,3));else{F=F.toNonIndexed();const t=F.attributes.position.count/3;if(s.length===3*t){const e=[];for(let r=0;r<t;r++){const t=s[3*r+0],n=s[3*r+1],a=s[3*r+2];D.set(t,n,a).convertSRGBToLinear(),e.push(D.r,D.g,D.b),e.push(D.r,D.g,D.b),e.push(D.r,D.g,D.b)}F.setAttribute("color",new n.a$l(e,3))}}return F}(a.decode(t)):function(t){const e=new Uint8Array(t),r=new DataView(t);let s,a,o=[],l=[],i=[],c=0;function u(t,e){let r=e,n=t[r];const s=[];for(;10!==n;)s.push(String.fromCharCode(n)),r++,n=t[r];return{start:e,end:r,next:r+1,parsedString:s.join("")}}for(;;){if(s=u(e,c),a=s.parsedString,0===a.indexOf("DATASET")){const t=a.split(" ")[1];if("POLYDATA"!==t)throw new Error("Unsupported DATASET type: "+t)}else if(0===a.indexOf("POINTS")){const t=parseInt(a.split(" ")[1],10),e=4*t*3;o=new Float32Array(3*t);let n=s.next;for(let e=0;e<t;e++)o[3*e]=r.getFloat32(n,!1),o[3*e+1]=r.getFloat32(n+4,!1),o[3*e+2]=r.getFloat32(n+8,!1),n+=12;s.next=s.next+e+1}else if(0===a.indexOf("TRIANGLE_STRIPS")){const t=parseInt(a.split(" ")[1],10),e=parseInt(a.split(" ")[2],10),n=4*e;i=new Uint32Array(3*e-9*t);let o=0,l=s.next;for(let e=0;e<t;e++){const t=r.getInt32(l,!1),e=[];l+=4;for(let n=0;n<t;n++)e.push(r.getInt32(l,!1)),l+=4;for(let r=0;r<t-2;r++)r%2?(i[o++]=e[r],i[o++]=e[r+2],i[o++]=e[r+1]):(i[o++]=e[r],i[o++]=e[r+1],i[o++]=e[r+2])}s.next=s.next+n+1}else if(0===a.indexOf("POLYGONS")){const t=parseInt(a.split(" ")[1],10),e=parseInt(a.split(" ")[2],10),n=4*e;i=new Uint32Array(3*e-9*t);let o=0,l=s.next;for(let e=0;e<t;e++){const t=r.getInt32(l,!1),e=[];l+=4;for(let n=0;n<t;n++)e.push(r.getInt32(l,!1)),l+=4;for(let r=1;r<t-1;r++)i[o++]=e[0],i[o++]=e[r],i[o++]=e[r+1]}s.next=s.next+n+1}else if(0===a.indexOf("POINT_DATA")){const t=parseInt(a.split(" ")[1],10);s=u(e,s.next);const n=4*t*3;l=new Float32Array(3*t);let o=s.next;for(let e=0;e<t;e++)l[3*e]=r.getFloat32(o,!1),l[3*e+1]=r.getFloat32(o+4,!1),l[3*e+2]=r.getFloat32(o+8,!1),o+=12;s.next=s.next+n}if(c=s.next,c>=e.byteLength)break}const f=new n.u9r;return f.setIndex(new n.TlE(i,1)),f.setAttribute("position",new n.TlE(o,3)),l.length===o.length&&f.setAttribute("normal",new n.TlE(l,3)),f}(t)}}}}]);